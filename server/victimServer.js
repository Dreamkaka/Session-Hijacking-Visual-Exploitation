const express = require('express');
const http = require('http');
const WebSocket = require('ws');
const path = require('path');
const { v4: uuidv4 } = require('uuid');
const app = express();
const port = 8000;

const server = http.createServer(app);

const wss = new WebSocket.Server({ server });

app.use(express.static(path.join(__dirname, 'public')));

app.get('/connect', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'connection.html'));
  });

wss.on('connection', (ws, req) => {
  const clientId = uuidv4();
  ws.id = clientId;
  ws.userAgent = req.headers['user-agent'];
  ws.ip = req.socket.remoteAddress;
  
  console.log(`New client connected (ID: ${clientId})`);

  ws.on('message', (message) => {
    console.log(`Message received: ${message}`);
    ws.send('Message received');
  });
  
  ws.on('close', () => {
    console.log('Client lost');
  });
});

function getConnectedClients() {
  return Array.from(wss.clients)
    .filter(client => client.readyState === WebSocket.OPEN)
    .map(client => ({
      id: client.id,
      readyState: client.readyState,
      userAgent: client.userAgent,
      ip: client.ip,
    }));
}
  

module.exports = {
  startServer: () => {
    server.listen(port, () => {
      console.log(`Server running on http://localhost:${port}`);
    });
  },
  getConnectedClients,
};