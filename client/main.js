const { app, BrowserWindow, ipcMain, session } = require('electron');

app.commandLine.appendSwitch('ignore-certificate-errors');

const excludedHosts = ['localhost:3000'];

function createWindow() {
  const win = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      nodeIntegration: true,
      contextIsolation: false,
      enableRemoteModule: true,
    },
  });
  session.defaultSession.clearCache()
  win.maximize(); 
  win.loadFile('index.html');
}

app.whenReady().then(createWindow);

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

ipcMain.on('open-interactive-window', (event, sessionID) => {
  const interactiveWin = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      nodeIntegration: true,
      contextIsolation: false,
    },
  });

  const proxyConfig = {
    proxyRules: 'http://192.168.0.15:8081',
    proxyBypassRules: excludedHosts.map(host => `*://localhost:3000`),
  };

  interactiveWin.webContents.session.webRequest.onBeforeSendHeaders((details, callback) => {
    details.requestHeaders['SHVE'] = sessionID;
    callback({ cancel: false, requestHeaders: details.requestHeaders });
  });

  interactiveWin.webContents.session.setProxy(proxyConfig).then(() => {
    interactiveWin.loadFile('interactive.html').then(() => {
      interactiveWin.maximize();
      interactiveWin.webContents.executeJavaScript(`document.title = "Session: ${sessionID}";`);
    });
  });
});

ipcMain.on('open-visual-window', (event, sessionID) => {
  const visualWin = new BrowserWindow({
    width: 800,
    height: 600,
    webPreferences: {
      nodeIntegration: true,
      contextIsolation: false,
    },
  });
  const proxyConfig = {
    proxyRules: 'http://192.168.0.15:8081',
    proxyBypassRules: excludedHosts.map(host => `*://localhost:3000`)
  };

  visualWin.webContents.session.webRequest.onBeforeSendHeaders((details, callback) => {
    details.requestHeaders['SHVE'] = sessionID;
    callback({ cancel: false, requestHeaders: details.requestHeaders });
  });

  visualWin.webContents.session.setProxy(proxyConfig).then(() => {
    visualWin.loadFile('visual.html').then(() => {
      visualWin.maximize();
      visualWin.webContents.executeJavaScript(`document.title = "Session: ${sessionID}";`);
    });
  });
});