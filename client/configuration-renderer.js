const { ipcRenderer } = require('electron');
const protocol = localStorage.getItem('protocol');
const ip = localStorage.getItem('ip');
const token = localStorage.getItem('token');
const serverPort = localStorage.getItem('serverPort');

document.getElementById('back-button').addEventListener('click', () => {
  window.location.href = 'index.html';
});

document.getElementById('logout-button').addEventListener('click', () => {
  localStorage.removeItem('token');
  localStorage.removeItem('ip');
  localStorage.removeItem('protocol');
  localStorage.removeItem('serverPort');
  window.location.href = 'login.html';
});

const downloadButtons = document.querySelectorAll('.download-btn');

downloadButtons.forEach(button => {
    button.addEventListener('click', () => {
        const templateName = button.getAttribute('data-template');
        const url = `${protocol}://${ip}:${serverPort}/templates/download/${templateName}`;
        fetch(url, {
            headers: { 'shve-authentication': token },
        })
        .then(response => response.blob())
        .then(blob => {
            const objectUrl = URL.createObjectURL(blob);
            const link = document.createElement('a');
            link.href = objectUrl;
            link.download = templateName;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        })
        .catch(error => {
            console.error('Error downloading the template', error);
        });
    });
});

document.getElementById('upload-btn').addEventListener('click', () => {
  const uploadInput = document.getElementById('uploadTemplate');
  if(uploadInput.files.length === 0) {
      console.error('No se ha seleccionado ningÃºn archivo para subir.');
      return;
  }

  const formData = new FormData();
  formData.append('template', uploadInput.files[0]);

  const url = `${protocol}://${ip}:${serverPort}/templates/upload`;

  fetch(url, {
      method: 'POST',
      headers: { 'shve-authentication': token },
      body: formData,
  })
  .then(response => response.text())
  .then(result => {
    if (result === 'Template uploaded successfully') {
        console.log('Template uploaded successfully.');
        uploadStatus.textContent = 'Uploaded Successfully';
        uploadStatus.style.color = 'red';
    } else {
        console.error('Error uploading the template:', result);
        uploadStatus.textContent = 'Error uploading the template';
        uploadStatus.style.color = 'red';
    }
})
.catch(error => {
    console.error('Error uploading the template:', error);
    uploadStatus.textContent = 'Error uploading the template';
    uploadStatus.style.color = 'red';
});
});
